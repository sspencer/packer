Usage: css-sprite <out> <src>... [options]

out     path of directory to write sprite file to
src     glob strings to find source images to put into the sprite

Options:
    -b, --base64           create css with base64 encoded sprite (css file will be written to <out>)
    -c, --css-image-path   http path to images on the web server (relative to css path or absolute path)  [../images]
    -f, --format           output format of the sprite (png or jpg)  [png]
    -n, --name             name of sprite file without file extension   [sprite]
    -p, --processor        output format of the css. one of css, less, sass, scss or stylus  [css]
    -t, --template         output template file, overrides processor option
    -r, --retina           generate both retina and standard sprites. src images have to be in retina resolution
    -s, --style            file to write css to, if omitted no css is written
    -w, --watch            continuously create sprite
    --background           background color of the sprite in hex  [#FFFFFF]
    --cachebuster          appends a "cache buster" to the background image in the form "?<...>" (random)  [false]
    --margin               margin in px between tiles  [4]
    --interpolation        Interpolation algorithm used when scaling retina images (nearest-neighbor|moving-average|linear|grid|cubic|lanczos)
    --opacity              background opacity of the sprite. defaults to 0 when png or 100 when jpg  [0]
    --orientation          orientation of the sprite image (vertical|horizontal|binary-tree)  [vertical]
    --prefix               prefix for the class name used in css (without .)
    --no-sort              disable sorting of layout


CSS-Sprite (above) is now sprity with the following options:


src: Array or string of globs to find source images to put into the sprite. Read more about globs here [required]
out: path of directory to write sprite file to [Default: process.cwd()]
base64: inlines base64 encoded sprites in the style file
cssPath: path or url of sprites on the web server used to reference the sprite in the styles (relative or absolute path or full url) [Default: ../images]
dimension: used dimensions for the sprite. A combination of ratio and dpi. Read more about dimensions: How to specify dimensions
engine: image processing engine. Read more about engines: Image processing engines [Default: lwip]
format: output format of the sprite (Depends on what engine is used) [Default: png when used with lwip]
name: name of sprite file without file extension [Default: sprite]
processor: style processing module. Read more about style processors: Style processors [css]
template: output template file, overrides processor option. Read more about templates: Templates
style: file to write css to, if omitted no css is written (relative to out path)
background: background color of the sprite in hex [Default: #FFFFFF]
cachebuster: appends a "cache buster" to the background image in the form "?<...>" (Boolean) [Default: false]
margin: margin in px between tiles [Default: 4]
opacity: background opacity (0 - 100) of the sprite. defaults to 0 when png or 100 when jpg [Default: 0]
orientation: orientation of the sprite image (vertical|horizontal|binary-tree) [Default: vertical]
prefix: prefix for the class name used in css (without .)
no-sort: disable sorting of layout. Read more about: Layout algorithms
split: create sprite images for every sub folder [Default: false] How to use split option
style-indent-char: Character used for indentation of styles (space|tab) [Default: space]
style-indent-size: Number of characters used for indentation of styles [Default: 2]
